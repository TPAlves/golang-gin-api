basePath: /
definitions:
  model.Hero:
    properties:
      Equipe:
        type: string
      Nome:
        type: string
      Super Poder:
        type: string
    type: object
  model.TokenRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.User:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Criada com o framework gin
  title: Hero API
  version: "1.0"
paths:
  /api/secured/hero:
    post:
      consumes:
      - application/json
      description: Registrar dados do herói.
      parameters:
      - description: hero
        in: body
        name: hero
        required: true
        schema:
          $ref: '#/definitions/model.Hero'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      security:
      - JWT: []
      summary: Registrar dados do herói.
      tags:
      - Hero
  /api/secured/hero/{id}:
    delete:
      consumes:
      - application/json
      description: Deletar dados do herói.
      parameters:
      - description: ID do herói
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - JWT: []
      summary: Deletar dados do herói.
      tags:
      - Hero
    get:
      consumes:
      - application/json
      description: Buscar dados do herói pelo ID.
      parameters:
      - description: ID do herói
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Hero'
      security:
      - JWT: []
      summary: Buscar dados do herói pelo ID.
      tags:
      - Hero
    put:
      consumes:
      - application/json
      description: Atualizar dados do herói.
      parameters:
      - description: ID do herói
        in: path
        name: id
        required: true
        type: integer
      - description: hero
        in: body
        name: hero
        required: true
        schema:
          $ref: '#/definitions/model.Hero'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - JWT: []
      summary: Atualizar dados do herói.
      tags:
      - Hero
  /api/secured/heros:
    get:
      consumes:
      - application/json
      description: Consultar dados dos heróis..
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Hero'
      security:
      - JWT: []
      summary: Consultar dados dos heróis.
      tags:
      - Hero
  /api/secured/user/register:
    post:
      consumes:
      - application/json
      description: Cadastrar usuário.
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      security:
      - JWT: []
      summary: Cadastrar usuário.
      tags:
      - User
  /api/token/:
    post:
      consumes:
      - application/json
      description: Gerar Token.
      parameters:
      - description: token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/model.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Gerar Token.
      tags:
      - User
securityDefinitions:
  JWT:
    in: header
    name: authorization
    type: apiKey
swagger: "2.0"
